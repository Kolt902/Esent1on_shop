// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Railway
// –ó–∞–º–µ–Ω—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ 'npm run build' –Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–µ
import { execSync } from 'child_process';
import { fileURLToPath } from 'url';
import { dirname, resolve } from 'path';
import fs from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NODE_ENV –≤ production
process.env.NODE_ENV = 'production';

try {
  console.log('üì¶ –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ –¥–ª—è Railway...');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
  console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
  execSync('npm ci --production', { stdio: 'inherit' });
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –∫–ª–∏–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é Vite
  console.log('üèóÔ∏è –°–±–æ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏ —Å Vite...');
  execSync('npx vite build', { stdio: 'inherit' });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dist —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!fs.existsSync(resolve(__dirname, 'dist'))) {
    fs.mkdirSync(resolve(__dirname, 'dist'));
  }
  
  // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª
  console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
  
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π Express —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª—å–∫–æ —Ä–∞–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  const simpleServerCode = `
// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Railway - –±–µ–∑ Vite –∏ –¥—Ä—É–≥–∏—Ö dev-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import fs from 'fs';
import { db } from './db.js';
import { registerRoutes } from './routes.js';
import { setupHealthCheck } from './healthcheck.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ë–∞–∑–æ–≤—ã–π –ø–æ—Ä—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const PORT = process.env.PORT || 8080;
process.env.NODE_ENV = 'production';

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = express();
app.use(express.json());

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
setupHealthCheck(app);

// –†–∞–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ 'public'
const publicDir = path.resolve(__dirname, 'public');
app.use(express.static(publicDir));

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º API –º–∞—Ä—à—Ä—É—Ç—ã
const httpServer = await registerRoutes(app);

// –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç–¥–∞–µ–º index.html
app.get('*', (req, res) => {
  res.sendFile(path.join(publicDir, 'index.html'));
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
httpServer.listen(PORT, '0.0.0.0', () => {
  console.log(\`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ \${process.env.NODE_ENV} —Ä–µ–∂–∏–º–µ –Ω–∞ –ø–æ—Ä—Ç—É \${PORT}\`);
});
`;

  fs.writeFileSync(resolve(__dirname, 'dist/index.js'), simpleServerCode);
  
  // –ö–æ–ø–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–µ—Ä–≤–µ—Ä–∞
  console.log('üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
  const serverFiles = [
    'routes.ts',
    'storage.ts',
    'telegram.ts',
    'dbStorage.ts',
    'db.ts',
    'middleware.ts',
    'healthcheck.ts'
  ];
  
  // –£–±–∏—Ä–∞–µ–º vite.ts –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–ø–∏—Ä—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É —Å @vitejs/plugin-react
  
  serverFiles.forEach(file => {
    const content = fs.readFileSync(resolve(__dirname, `server/${file}`), 'utf8');
    let transformed = content
      .replace(/from\s+["']@shared\/(.*?)["']/g, 'from "../shared/$1"')
      .replace(/from\s+["']@server\/(.*?)["']/g, 'from "./$1"')
      .replace(/\.ts["']/g, '.js"');
    
    // –£–¥–∞–ª—è–µ–º –∏–º–ø–æ—Ä—Ç vite –∏–∑ routes.ts
    if (file === 'routes.ts') {
      transformed = transformed.replace(/import.*from\s+["']\.\/vite\.js["'];?\n?/g, '');
      transformed = transformed.replace(/await\s+setupVite\(app,\s*httpServer\);/g, '// Vite –æ—Ç–∫–ª—é—á–µ–Ω –≤ production');
    }
    
    fs.writeFileSync(resolve(__dirname, `dist/${file.replace('.ts', '.js')}`), transformed);
  });
  
  // –ö–æ–ø–∏—Ä—É–µ–º shared –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
  console.log('üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ shared –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...');
  if (!fs.existsSync(resolve(__dirname, 'dist/shared'))) {
    fs.mkdirSync(resolve(__dirname, 'dist/shared'));
  }
  
  const sharedFiles = [
    'schema.ts',
  ];
  
  sharedFiles.forEach(file => {
    const content = fs.readFileSync(resolve(__dirname, `shared/${file}`), 'utf8');
    const transformed = content
      .replace(/\.ts["']/g, '.js"');
    
    fs.writeFileSync(resolve(__dirname, `dist/shared/${file.replace('.ts', '.js')}`), transformed);
  });
  
  console.log('‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ:', error);
  process.exit(1);
}